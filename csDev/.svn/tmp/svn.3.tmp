package com.cs.study.signup.controller;

import com.cs.study.radioselect.service.DeptService;
import com.cs.study.radioselect.vo.DeptVO;
import com.cs.study.signup.service.SignupService;
import com.cs.study.signup.vo.SignupVO;
import com.cs.study.signup.vo.SignupVOrjh;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestParam;

import java.util.List;

@Controller
public class SignupController {

    private final DeptService deptService;
    private final SignupService signupService;

    public SignupController(DeptService deptService, SignupService signupService) {
        this.deptService = deptService;
        this.signupService = signupService;
    }

    @GetMapping("/signup/signupKcs")
    public String signupKcs(Model model, SignupVO signupVO) {

        DeptVO deptVO = new DeptVO();
        deptVO.setDeptGrp("signup_question");
        List<DeptVO> signupQuestionList = deptService.selectDeptList(deptVO);
        model.addAttribute("signupQuestionList", signupQuestionList);

        deptVO = new DeptVO();
        deptVO.setDeptGrp("signup_phone");
        List<DeptVO> signupPhoneList = deptService.selectDeptList(deptVO);
        model.addAttribute("signupPhoneList", signupPhoneList);

        deptVO = new DeptVO();
        deptVO.setDeptGrp("signup_terms");
        List<DeptVO> signupTermsList = deptService.selectDeptList(deptVO);
        if (signupTermsList.size() > 0){
            model.addAttribute("signupTerms", signupTermsList.get(0).getDeptName());
        }

        return "signup/signupKcs";
    }

    @PostMapping("/signup/insertSignup")
    public String insertSignup(Model model, SignupVO signupVO) {
        // 서비스가 정상이라면??
        String returnViewName = "";
        Boolean insertFlag = signupService.insertSignup(signupVO);
        // 정상 화면으로 이동
        if ( insertFlag ){
//      회원가입 리스트 화면을 추가로 만드세요
            returnViewName = "redirect:/syncSampleList";
        }
        // 비정상 이라면??
        else{
            model.addAttribute( "signupVO", signupVO );
            returnViewName = "signup/signupKcs";

            DeptVO deptVO = new DeptVO();
            deptVO.setDeptGrp("signup_question");
            List<DeptVO> signupQuestionList = deptService.selectDeptList(deptVO);
            model.addAttribute("signupQuestionList", signupQuestionList);

            deptVO = new DeptVO();
            deptVO.setDeptGrp("signup_phone");
            List<DeptVO> signupPhoneList = deptService.selectDeptList(deptVO);
            model.addAttribute("signupPhoneList", signupPhoneList);

            deptVO = new DeptVO();
            deptVO.setDeptGrp("signup_terms");
            List<DeptVO> signupTermsList = deptService.selectDeptList(deptVO);
            if (signupTermsList.size() > 0){
                model.addAttribute("signupTerms", signupTermsList.get(0).getDeptName());
            }
        }
//        return
        // 회원가입 화면으로 signupVO 가지고 이동해라
        // 회원가입 화면은 최초에 데이터없이 갓을까??
        // 질문답변, 전화번호앞자리, 약관


        return returnViewName;
    }
}
