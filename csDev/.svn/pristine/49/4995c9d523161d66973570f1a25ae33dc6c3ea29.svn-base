package com.cs.study.signup.service;

import java.util.List;

import org.springframework.stereotype.Service;

import com.cs.study.signup.mapper.SignupMapperrjh;
import com.cs.study.signup.vo.SignupVO;
import com.cs.study.signup.vo.SignupVOrjh;

@Service
public class SignupServicerjh {
    public final SignupMapperrjh signupMapperrjh;

    public SignupServicerjh(SignupMapperrjh signupMapperrjh) {
        this.signupMapperrjh = signupMapperrjh;
    }


    public int insertSignuprjh(SignupVOrjh signupVOrjh){

        // 1. 패스워드 일치 확인
        // 1-1. 값이 다르면? : 재시도
        if ( !signupVOrjh.getUserPw().equals( signupVOrjh.getUserPwChk() ) ) {
        	
            // 서비스 -> 컨트롤러
            // 컨트롤러에서 서비스가 정상작동한지 체크해서 
            // 정상이라면? 화면이동하고
            // 비정상이라면? 회원가입 화면으로 signupVO 가지고 돌아가라 동기적방식으로 추가한다.
    }
        

        // 2. 전화번호 합치기
        signupVOrjh.setPhoneNumber( signupVOrjh.getPhoneNumber1() + "-" + signupVOrjh.getPhoneNumber2() + "-" + signupVOrjh.getPhoneNumber3() );

        //문자열 사이에 / - . 원하는거 입력해서 값 넘겨주기,
        
        // 3. 체크박스 Y아닐경우 체크
        if (signupVOrjh.getTermsBuyYn() == null) {
        	signupVOrjh.setTermsBuyYn("N");
        }
        if (signupVOrjh.getTermsInfoYn() == null) {
        	signupVOrjh.setTermsInfoYn("N");
        }
        if (signupVOrjh.getTermsSellYn() == null) {
        	signupVOrjh.setTermsSellYn("N");
        }

        return signupMapperrjh.insertSignuprjh(signupVOrjh);
    }

    public List<SignupVOrjh> signupListrjh(SignupVOrjh signupVOrjh){
    	return signupMapperrjh.signupListrjh(signupVOrjh);
    }
}
